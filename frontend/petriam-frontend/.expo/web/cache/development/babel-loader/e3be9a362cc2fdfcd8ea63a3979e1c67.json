{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"loadingElement\", \"url\"];\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nimport invariant from 'fbjs/lib/invariant';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nvar LOADING_STATE_NONE = 'NONE';\nvar LOADING_STATE_BEGIN = 'BEGIN';\nvar LOADING_STATE_LOADED = 'LOADED';\n\nvar getDisplayName = function getDisplayName(Component) {\n  if (typeof Component === 'string') {\n    return Component;\n  }\n\n  if (!Component) {\n    return undefined;\n  }\n\n  return Component.displayName || Component.name || 'Component';\n};\n\nexport function withRemoteStyles(BaseComponent) {\n  var factory = React.createFactory(BaseComponent);\n\n  var Container = function (_React$PureComponent) {\n    _inherits(Container, _React$PureComponent);\n\n    var _super = _createSuper(Container);\n\n    function Container() {\n      var _this;\n\n      _classCallCheck(this, Container);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _super.call.apply(_super, [this].concat(args));\n      _this.state = {\n        loadingState: LOADING_STATE_NONE\n      };\n      _this.isUnmounted = false;\n\n      _this.handleLoaded = function () {\n        if (_this.isUnmounted) {\n          return;\n        }\n\n        _this.setState({\n          loadingState: LOADING_STATE_LOADED\n        });\n      };\n\n      return _this;\n    }\n\n    _createClass(Container, [{\n      key: \"componentWillMount\",\n      value: function componentWillMount() {\n        var _this$props = this.props,\n            loadingElement = _this$props.loadingElement,\n            url = _this$props.url;\n        invariant(!!loadingElement && !!url, 'Required props loadingElement or url is missing. You need to provide both of them.');\n      }\n    }, {\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        var loadingState = this.state.loadingState;\n\n        if (loadingState !== LOADING_STATE_NONE || !canUseDOM) {\n          return;\n        }\n\n        this.setState({\n          loadingState: LOADING_STATE_BEGIN\n        });\n\n        var _require = require(\"./autoLink\"),\n            autoLink = _require.default,\n            onloadCSS = _require.onloadCSS;\n\n        var url = this.props.url;\n        var ss = autoLink(url, null, null, {\n          crossorigin: '',\n          integrity: 'sha512-xwE/Az9zrjBIphAcBb3F6JVqxf46+CDLwfLMHloNu6KEQCAWi6HcDUbeOfBIptF7tcCzusKFjFw2yuvEpDL9wQ=='\n        });\n        onloadCSS(ss, this.handleLoaded);\n      }\n    }, {\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        this.isUnmounted = true;\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this2 = this;\n\n        var _this$props2 = this.props,\n            loadingElement = _this$props2.loadingElement,\n            url = _this$props2.url,\n            restProps = _objectWithoutProperties(_this$props2, _excluded);\n\n        var loadingState = this.state.loadingState;\n\n        if (loadingState === LOADING_STATE_LOADED) {\n          return React.createElement(BaseComponent, _extends({\n            ref: function ref(_ref) {\n              return _this2.ref = _ref;\n            }\n          }, restProps));\n        }\n\n        return loadingElement;\n      }\n    }]);\n\n    return Container;\n  }(React.PureComponent);\n\n  Container.displayName = \"withRemoteStyles(\" + getDisplayName(BaseComponent) + \")\";\n  Container.propTypes = {\n    loadingElement: PropTypes.node.isRequired,\n    url: PropTypes.string.isRequired\n  };\n  Container.defaultProps = {\n    loadingElement: React.createElement(\"div\", {\n      style: {\n        height: '100%'\n      }\n    })\n  };\n  return Container;\n}\nexport default withRemoteStyles;","map":{"version":3,"sources":["/Users/kiraci/Desktop/improvement/petriam/frontend/petriam-frontend/node_modules/react-native-maps/lib/web/Leaflet/utils/withRemoteStyles.js"],"names":["canUseDOM","invariant","PropTypes","React","LOADING_STATE_NONE","LOADING_STATE_BEGIN","LOADING_STATE_LOADED","getDisplayName","Component","undefined","displayName","name","withRemoteStyles","BaseComponent","factory","createFactory","Container","state","loadingState","isUnmounted","handleLoaded","setState","props","loadingElement","url","require","autoLink","default","onloadCSS","ss","crossorigin","integrity","restProps","ref","PureComponent","propTypes","node","isRequired","string","defaultProps","height"],"mappings":"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","sourcesContent":["import { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nimport invariant from 'fbjs/lib/invariant';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst LOADING_STATE_NONE = 'NONE';\nconst LOADING_STATE_BEGIN = 'BEGIN';\nconst LOADING_STATE_LOADED = 'LOADED';\n\nconst getDisplayName = Component => {\n  if (typeof Component === 'string') {\n    return Component;\n  }\n\n  if (!Component) {\n    return undefined;\n  }\n\n  return Component.displayName || Component.name || 'Component';\n};\n\nexport function withRemoteStyles(BaseComponent) {\n  const factory = React.createFactory(BaseComponent);\n\n  class Container extends React.PureComponent {\n    static displayName = `withRemoteStyles(${getDisplayName(BaseComponent)})`;\n\n    static propTypes = {\n      loadingElement: PropTypes.node.isRequired,\n      url: PropTypes.string.isRequired,\n    };\n\n    static defaultProps = {\n      loadingElement: <div style={{ height: '100%' }} />,\n    };\n\n    state = {\n      loadingState: LOADING_STATE_NONE,\n    };\n\n    isUnmounted = false;\n\n    handleLoaded = () => {\n      if (this.isUnmounted) {\n        return;\n      }\n      this.setState({\n        loadingState: LOADING_STATE_LOADED,\n      });\n    };\n\n    componentWillMount() {\n      const { loadingElement, url } = this.props;\n      invariant(\n        !!loadingElement && !!url,\n        'Required props loadingElement or url is missing. You need to provide both of them.'\n      );\n    }\n\n    componentDidMount() {\n      const { loadingState } = this.state;\n      if (loadingState !== LOADING_STATE_NONE || !canUseDOM) {\n        return;\n      }\n      this.setState({\n        loadingState: LOADING_STATE_BEGIN,\n      });\n      // Don't load scriptjs as a dependency since we do not want this module be used on server side.\n      // eslint-disable-next-line global-require\n      const { default: autoLink, onloadCSS } = require('./autoLink');\n      const { url } = this.props;\n      //   scriptjs(url, this.handleLoaded);\n\n      const ss = autoLink(url, null, null, {\n        crossorigin: '',\n        integrity:\n          'sha512-xwE/Az9zrjBIphAcBb3F6JVqxf46+CDLwfLMHloNu6KEQCAWi6HcDUbeOfBIptF7tcCzusKFjFw2yuvEpDL9wQ==',\n      });\n      onloadCSS(ss, this.handleLoaded);\n    }\n\n    componentWillUnmount() {\n      this.isUnmounted = true;\n    }\n\n    render() {\n      const {\n        loadingElement,\n        url, // eslint-disable-line no-unused-vars\n        ...restProps\n      } = this.props;\n\n      const { loadingState } = this.state;\n\n      if (loadingState === LOADING_STATE_LOADED) {\n        return <BaseComponent ref={ref => (this.ref = ref)} {...restProps} />;\n      }\n      return loadingElement;\n    }\n  }\n\n  return Container;\n}\n\nexport default withRemoteStyles;\n"]},"metadata":{},"sourceType":"module"}