{"ast":null,"code":"import React from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport SearchBox from \"../../components/searchBox/searchBox\";\nimport SelectDropdown from 'react-native-select-dropdown';\nimport { Icon } from 'react-native-elements';\nexport default function ListHost() {\n  var petIcons = [React.createElement(Image, {\n    style: {\n      width: 30,\n      height: 30\n    },\n    source: require(\"../../../assets/icons/dove.png\")\n  }), React.createElement(Image, {\n    style: {\n      width: 30,\n      height: 30\n    },\n    source: require(\"../../../assets/icons/cat.png\")\n  }), React.createElement(Image, {\n    style: {\n      width: 30,\n      height: 30\n    },\n    source: require(\"../../../assets/icons/turtle.png\")\n  }), React.createElement(Image, {\n    style: {\n      width: 30,\n      height: 30,\n      justifyContent: 'center'\n    },\n    source: require(\"../../../assets/icons/pet.png\")\n  })];\n  var cities = [\"Ankara\", \"Istanbul\", \"Eski≈üehir\"];\n  var chevronDownIcon = React.createElement(Icon, {\n    name: \"expand-more\",\n    size: 50,\n    color: \"#707070\"\n  });\n  var resultsData = [{\n    name: \"John Doe\",\n    imgUrl: \"../../../assets/icons/avatarWoman.png\",\n    address: \"Bilkent University Cankaya / Ankara\",\n    animal: \"dog\",\n    price: 55\n  }];\n  return React.createElement(SafeAreaView, {\n    style: styles.container\n  }, React.createElement(View, {\n    style: styles.filters\n  }, React.createElement(SearchBox, {\n    text: \"SEARCH HOSTS\"\n  }), React.createElement(View, {\n    style: styles.parameters\n  }, React.createElement(View, {\n    style: styles.animal\n  }, React.createElement(SelectDropdown, {\n    rowStyle: {\n      width: 100,\n      paddingLeft: 24\n    },\n    data: petIcons,\n    onSelect: function onSelect(selectedItem, index) {\n      console.log(selectedItem, index);\n    },\n    buttonTextAfterSelection: function buttonTextAfterSelection(selectedItem, index) {\n      return selectedItem;\n    },\n    rowTextForSelection: function rowTextForSelection(item, index) {\n      return item;\n    },\n    renderDropdownIcon: function renderDropdownIcon() {\n      return chevronDownIcon;\n    },\n    dropdownIconPosition: \"right\",\n    buttonStyle: {\n      width: 100,\n      justifyContent: 'center',\n      alignSelf: 'center',\n      borderRadius: 20\n    },\n    defaultValue: petIcons[0]\n  })), React.createElement(View, {\n    style: styles.cities\n  }, React.createElement(SelectDropdown, {\n    data: cities,\n    onSelect: function onSelect(selectedItem, index) {\n      console.log(selectedItem, index);\n    },\n    buttonTextAfterSelection: function buttonTextAfterSelection(selectedItem, index) {\n      return selectedItem;\n    },\n    rowTextForSelection: function rowTextForSelection(item, index) {\n      return item;\n    },\n    renderDropdownIcon: function renderDropdownIcon() {\n      return chevronDownIcon;\n    },\n    dropdownIconPosition: \"right\",\n    buttonStyle: {\n      width: 140,\n      borderRadius: 20\n    },\n    defaultValue: cities[0]\n  })), React.createElement(View, {\n    style: styles.more\n  }, React.createElement(SelectDropdown, {\n    data: [],\n    onSelect: function onSelect(selectedItem, index) {\n      console.log(selectedItem, index);\n    },\n    buttonTextAfterSelection: function buttonTextAfterSelection(selectedItem, index) {\n      return selectedItem;\n    },\n    rowTextForSelection: function rowTextForSelection(item, index) {\n      return item;\n    },\n    dropdownIconPosition: \"right\",\n    buttonStyle: {\n      width: 75,\n      borderRadius: 20\n    },\n    defaultButtonText: \"More\",\n    disabled: true\n  })))), React.createElement(View, {\n    style: styles.results\n  }, React.createElement(FlatList, {\n    style: {\n      marginTop: 100\n    },\n    data: resultsData,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        style: styles.result\n      }, React.createElement(View, {\n        style: styles.profilePicture\n      }, React.createElement(Image, {\n        style: styles.profilePictureImage,\n        source: item.imgUrl\n      })), React.createElement(View, {\n        style: styles.info\n      }, React.createElement(Text, {\n        style: {\n          fontWeight: 'bold',\n          marginLeft: 10\n        }\n      }, item.name), React.createElement(Text, {\n        style: {\n          marginLeft: 10\n        }\n      }, item.address)), React.createElement(View, {\n        style: styles.price\n      }, React.createElement(Text, {\n        style: {\n          fontWeight: 'bold'\n        }\n      }, item.price, React.createElement(Text, {\n        style: {\n          fontSize: 20\n        }\n      }, \"\\u20BA\"), React.createElement(Text, null, \"  \", React.createElement(Text, {\n        style: {\n          fontWeight: 'normal'\n        }\n      }, \"per night\"))), React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          marginTop: 7\n        }\n      }, React.createElement(Image, {\n        style: {\n          width: 22,\n          height: 22\n        },\n        source: require(\"../../../assets/icons/cat.png\")\n      }), React.createElement(Text, {\n        style: {\n          marginLeft: 10\n        }\n      }, item.animal, \" Host\"))));\n    }\n  })), React.createElement(View, {\n    style: styles.navbar\n  }));\n}\n;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#F2F2F2'\n  },\n  filters: {\n    flex: 1,\n    backgroundColor: 'red',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  parameters: {\n    flex: 1,\n    flexDirection: 'row'\n  },\n  animal: {\n    flex: 1\n  },\n  cities: {\n    flex: 1\n  },\n  more: {\n    flex: 1,\n    position: 'relative',\n    right: -33\n  },\n  results: {\n    flex: 3,\n    backgroundColor: 'green',\n    paddingHorizontal: 20\n  },\n  result: {\n    flex: 1,\n    flexDirection: 'row',\n    height: 30\n  },\n  profilePicture: {\n    flex: 2,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  profilePictureImage: {\n    width: 50,\n    height: 50,\n    overflow: 'hidden',\n    borderRadius: 50,\n    borderWidth: 3,\n    borderColor: \"black\"\n  },\n  info: {\n    flex: 3,\n    justifyContent: 'center'\n  },\n  price: {\n    flex: 3,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  navbar: {\n    flex: 1\n  },\n  line: {\n    borderBottomColor: 'black',\n    borderBottomWidth: 1\n  }\n});","map":{"version":3,"sources":["/Users/kiraci/Desktop/improvement/petriam/frontend/petriam-frontend/src/screens/listHost/listHost.tsx"],"names":["React","SearchBox","SelectDropdown","Icon","ListHost","petIcons","width","height","require","justifyContent","cities","chevronDownIcon","resultsData","name","imgUrl","address","animal","price","styles","container","filters","parameters","paddingLeft","selectedItem","index","console","log","item","alignSelf","borderRadius","more","results","marginTop","result","profilePicture","profilePictureImage","info","fontWeight","marginLeft","fontSize","flexDirection","navbar","StyleSheet","create","flex","backgroundColor","alignItems","position","right","paddingHorizontal","overflow","borderWidth","borderColor","line","borderBottomColor","borderBottomWidth"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { SafeAreaView, StyleSheet, View, Text, Image, FlatList } from 'react-native';\nimport SearchBox from '../../components/searchBox/searchBox';\nimport SelectDropdown from 'react-native-select-dropdown'\nimport { Icon } from 'react-native-elements';\n\nexport default function ListHost() {\n\n    const petIcons = [\n        (\n            <Image\n                style={{ width: 30, height: 30 }}\n                source={require('../../../assets/icons/dove.png')} />\n        ),\n        (\n            <Image\n                style={{ width: 30, height: 30 }}\n                source={require('../../../assets/icons/cat.png')} />\n        ),\n        (\n            <Image\n                style={{ width: 30, height: 30 }}\n                source={require('../../../assets/icons/turtle.png')} />\n        ),\n        (\n            <Image\n                style={{ width: 30, height: 30, justifyContent: 'center' }}\n                source={require('../../../assets/icons/pet.png')} />\n        ),\n    ]\n\n    const cities = [\n        \"Ankara\",\n        \"Istanbul\",\n        \"Eski≈üehir\"\n    ]\n\n    const chevronDownIcon = (\n        <Icon\n            name='expand-more'\n            size={50}\n            color='#707070'\n        />\n    );\n\n    const resultsData = [\n        {\n            name: \"John Doe\",\n            imgUrl: \"../../../assets/icons/avatarWoman.png\",\n            address: \"Bilkent University Cankaya / Ankara\",\n            animal: \"dog\",\n            price: 55\n        }\n    ]\n\n\n\n    return (\n        <SafeAreaView style={styles.container}>\n            <View style={styles.filters}>\n                <SearchBox text=\"SEARCH HOSTS\" />\n                <View style={styles.parameters}>\n                    <View style={styles.animal}>\n                        <SelectDropdown\n                            rowStyle={{ width: 100, paddingLeft: 24 }}\n                            data={petIcons}\n                            onSelect={(selectedItem, index) => {\n                                console.log(selectedItem, index)\n                            }}\n                            buttonTextAfterSelection={(selectedItem, index) => {\n                                // text represented after item is selected\n                                // if data array is an array of objects then return selectedItem.property to render after item is selected\n                                return selectedItem\n                            }}\n                            rowTextForSelection={(item, index) => {\n                                // text represented for each item in dropdown\n                                // if data array is an array of objects then return item.property to represent item in dropdown\n                                return item\n                            }}\n                            renderDropdownIcon={() => chevronDownIcon}\n                            dropdownIconPosition='right'\n                            buttonStyle={{ width: 100, justifyContent: 'center', alignSelf: 'center', borderRadius: 20 }}\n                            defaultValue={petIcons[0]}\n                        />\n                    </View>\n                    <View style={styles.cities}>\n                        <SelectDropdown\n                            data={cities}\n                            onSelect={(selectedItem, index) => {\n                                console.log(selectedItem, index)\n                            }}\n                            buttonTextAfterSelection={(selectedItem, index) => {\n                                // text represented after item is selected\n                                // if data array is an array of objects then return selectedItem.property to render after item is selected\n                                return selectedItem\n                            }}\n                            rowTextForSelection={(item, index) => {\n                                // text represented for each item in dropdown\n                                // if data array is an array of objects then return item.property to represent item in dropdown\n                                return item\n                            }}\n                            renderDropdownIcon={() => chevronDownIcon}\n                            dropdownIconPosition='right'\n                            buttonStyle={{ width: 140, borderRadius: 20 }}\n                            defaultValue={cities[0]}\n                        />\n                    </View>\n                    <View style={styles.more}>\n                        <SelectDropdown\n                            data={[]}\n                            onSelect={(selectedItem, index) => {\n                                console.log(selectedItem, index)\n                            }}\n                            buttonTextAfterSelection={(selectedItem, index) => {\n                                // text represented after item is selected\n                                // if data array is an array of objects then return selectedItem.property to render after item is selected\n                                return selectedItem\n                            }}\n                            rowTextForSelection={(item, index) => {\n                                // text represented for each item in dropdown\n                                // if data array is an array of objects then return item.property to represent item in dropdown\n                                return item\n                            }}\n                            dropdownIconPosition='right'\n                            buttonStyle={{ width: 75, borderRadius: 20 }}\n                            defaultButtonText=\"More\"\n                            disabled\n                        />\n                    </View>\n                </View>\n            </View>\n            <View style={styles.results}>\n                <FlatList\n                style={{marginTop: 100}}\n                    data={resultsData}\n                    renderItem={({ item }) => (\n                        <View style={styles.result}>\n                            <View style={styles.profilePicture}>\n                                <Image\n                                    style={styles.profilePictureImage}\n                                    source={item.imgUrl} />\n                            </View>\n                            <View style={styles.info}>\n                                <Text style={{ fontWeight: 'bold', marginLeft: 10 }}>{item.name}</Text>\n                                <Text style={{ marginLeft: 10 }}>{item.address}</Text>\n                            </View>\n                            <View style={styles.price}>\n                                <Text style={{ fontWeight: 'bold' }}>{item.price}<Text style={{ fontSize: 20 }}>‚Ç∫</Text><Text>  <Text style={{ fontWeight: 'normal' }}>per night</Text></Text></Text>\n\n                                <View style={{ flexDirection: 'row', marginTop: 7 }}>\n                                    <Image\n                                        style={{ width: 22, height: 22 }}\n                                        source={require('../../../assets/icons/cat.png')} />\n                                    <Text style={{ marginLeft: 10 }}>{item.animal} Host</Text>\n                                </View>\n                            </View>\n                        </View>\n                    )}\n                />\n            </View>\n            <View style={styles.navbar}>\n\n            </View>\n        </SafeAreaView>\n    )\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#F2F2F2',\n    },\n    filters: {\n        flex: 1,\n        backgroundColor: 'red',\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    parameters: {\n        flex: 1,\n        flexDirection: 'row'\n    },\n    animal: {\n        flex: 1\n    },\n    cities: {\n        flex: 1,\n    },\n    more: {\n        flex: 1,\n        position: 'relative',\n        right: -33\n    },\n    results: {\n        flex: 3,\n        backgroundColor: 'green',\n        paddingHorizontal: 20\n    },\n    result: {\n        flex: 1,\n        flexDirection: 'row',\n        height: 30\n    },\n    profilePicture: {\n        flex: 2,\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n    profilePictureImage: {\n        width: 50,\n        height: 50,\n        overflow: 'hidden',\n        borderRadius: 50,\n        borderWidth: 3,\n        borderColor: \"black\"\n    },\n    info: {\n        flex: 3,\n        justifyContent: 'center',\n    },\n    price: {\n        flex: 3,\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n    navbar: {\n        flex: 1,\n    },\n    line: {\n        borderBottomColor: 'black',\n        borderBottomWidth: 1,\n    },\n});"]},"metadata":{},"sourceType":"module"}